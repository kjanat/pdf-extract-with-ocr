name: Docker CI/CD

on:
  schedule:
    - cron: "31 11 * * *" # Daily at 11:31 UTC
  push:
    branches: ["master", "docker"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["master", "docker"]

jobs:
  build-fast-platforms:
    name: Build amd64 and arm64 images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Login to DockerHub
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata for Docker tags
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            kjanat/pdf-extract-with-ocr
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      # Build and push common platforms (fast)
      - name: Build and push fast platforms
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          annotations: ${{ steps.meta.outputs.annotations }}

      # Sign the images (GitHub Container Registry only)
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # Use a more explicit approach to ensure only ghcr.io images are signed
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          # Get all tags produced by the metadata action
          ALL_TAGS="${{ steps.meta.outputs.tags }}"
          # Filter for only ghcr.io tags
          GHCR_TAGS=$(echo "$ALL_TAGS" | grep "^ghcr.io/")
          echo "$GHCR_TAGS"
          # Sign only the GitHub Container Registry images
          echo "$GHCR_TAGS" | xargs -I {} cosign sign --yes {}@${DIGEST}

  build-armv7:
    name: Build armv7 image
    runs-on: ubuntu-latest
    # Only build armv7 for tags and scheduled builds, not every PR or push
    if: github.event_name == 'schedule' || startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata for Docker tags
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            kjanat/pdf-extract-with-ocr
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-armv7
            type=ref,event=branch,suffix=-armv7
            type=raw,value=armv7,enable={{is_default_branch}}

      # Build and push ARM v7 platform (slow)
      - name: Build and push ARMv7
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the images (GitHub Container Registry only)
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          # Get all tags produced by the metadata action
          ALL_TAGS="${{ steps.meta.outputs.tags }}"
          # Filter for only ghcr.io tags
          GHCR_TAGS=$(echo "$ALL_TAGS" | grep "^ghcr.io/")
          # Sign only the GitHub Container Registry images
          echo "$GHCR_TAGS" | xargs -I {} cosign sign --yes {}@${DIGEST}